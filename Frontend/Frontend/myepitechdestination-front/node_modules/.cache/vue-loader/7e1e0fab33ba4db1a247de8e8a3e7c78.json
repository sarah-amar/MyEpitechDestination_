{"remainingRequest":"/home/andrea/Documents/MyEpitechDestination/Frontend/Frontend/myepitechdestination-front/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/andrea/Documents/MyEpitechDestination/Frontend/Frontend/myepitechdestination-front/src/components/SearchBar.vue?vue&type=template&id=0eca37cb&scoped=true","dependencies":[{"path":"/home/andrea/Documents/MyEpitechDestination/Frontend/Frontend/myepitechdestination-front/src/components/SearchBar.vue","mtime":1622580421753},{"path":"/home/andrea/Documents/MyEpitechDestination/Frontend/Frontend/myepitechdestination-front/node_modules/cache-loader/dist/cjs.js","mtime":1622583802845},{"path":"/home/andrea/Documents/MyEpitechDestination/Frontend/Frontend/myepitechdestination-front/node_modules/babel-loader/lib/index.js","mtime":1622583780633},{"path":"/home/andrea/Documents/MyEpitechDestination/Frontend/Frontend/myepitechdestination-front/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1622584282761},{"path":"/home/andrea/Documents/MyEpitechDestination/Frontend/Frontend/myepitechdestination-front/node_modules/cache-loader/dist/cjs.js","mtime":1622583802845},{"path":"/home/andrea/Documents/MyEpitechDestination/Frontend/Frontend/myepitechdestination-front/node_modules/vue-loader-v16/dist/index.js","mtime":1622584282457}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdj4KICAgIDxkaXYgaWQ9ImF1dG9jb21wbGV0ZSIgY2xhc3M9ImF1dG9jb21wbGV0ZSI+CiAgICAgIDxkaXYgY2xhc3M9ImF1dG9jb21wbGV0ZSIgc3R5bGU9IiI+CiAgICAgICAgPGlucHV0CiAgICAgICAgICB0eXBlPSJ0ZXh0IgogICAgICAgICAgbmFtZT0iIgogICAgICAgICAgcGxhY2Vob2xkZXI9IkV4cGxvcmUiCiAgICAgICAgICB2LW1vZGVsPSJxdWVyeSIKICAgICAgICAgIEBrZXl1cD0ic2VhcmNoQmFyKHF1ZXJ5KSIKICAgICAgICAvPgogICAgICAgIDxkaXYgdi1mb3I9ImFydGljbGUgaW4gZGF0YS5kYXRhIiA6a2V5PSJhcnRpY2xlIj4KICAgICAgICAgIHt7IGFydGljbGUudGl0cmUgfX0KICAgICAgICAgIHt7IGFydGljbGUuZGVzY3JpcHRpb24gfX0KICAgICAgICAgIDxpbWcgOnNyYz0iJ2h0dHA6Ly9sb2NhbGhvc3Q6ODA4MC8nICsgYXJ0aWNsZS5pbWFnZSIgd2lkdGg9IjI1MCIgLz4KICAgICAgICA8L2Rpdj4KICAgICAgICA8c2VsZWN0IHYtbW9kZWw9ImNvbnRpbmVudCIgQGNoYW5nZT0iZ2V0QnlDb250aW5lbnQoKSI+CiAgICAgICAgICA8b3B0aW9uIHYtZm9yPSJjb250aW5lbnQgaW4gY29udGluZW50cy5kYXRhIiA6a2V5PSJjb250aW5lbnQuaWQiPgogICAgICAgICAgICB7eyBjb250aW5lbnQuY29udGluZW50IH19CiAgICAgICAgICA8L29wdGlvbj48L3NlbGVjdAogICAgICAgID48YnIgLz4KICAgICAgICA8ZGl2IHYtZm9yPSJjb3VudHJ5IGluIGNvdW50cmllcy5kYXRhIiA6a2V5PSJjb3VudHJ5LmlkIj4KICAgICAgICAgIDxzZWxlY3Qgdi1tb2RlbD0icGF5cyIgQGNoYW5nZT0iZ2V0QnlQYXlzKCkiPgogICAgICAgICAgICA8b3B0aW9uIHYtZm9yPSJwYXlzIGluIGNvdW50cnkuZXRhdHMiIDprZXk9InBheXMuaWQiPgogICAgICAgICAgICAgIHt7IHBheXMucGF5cyB9fQogICAgICAgICAgICA8L29wdGlvbj48L3NlbGVjdAogICAgICAgICAgPjxiciAvPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXY+CiAgICAgICAgICA8c2VsZWN0IHYtbW9kZWw9InZpbGxlIiBAY2hhbmdlPSJnZXRCeVZpbGxlKCkiPgogICAgICAgICAgICA8b3B0aW9uIHYtZm9yPSJ2aWxsZSBpbiB2aWxsZS5kYXRhIiA6a2V5PSJ2aWxsZS5pZCI+CiAgICAgICAgICAgICAge3sgdmlsbGUubm9tIH19CiAgICAgICAgICAgIDwvb3B0aW9uPjwvc2VsZWN0CiAgICAgICAgICA+PGJyIC8+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdj4KICAgICAgICAgIDxzZWxlY3Qgdi1tb2RlbD0idW5pdmVyc2l0ZSIgQGNoYW5nZT0iZ2V0QnlVbml2ZXJzaXRlKCkiPgogICAgICAgICAgICA8b3B0aW9uIHYtZm9yPSJlY29sZSBpbiB1bml2ZXJzaXRlLmRhdGEiIDprZXk9ImVjb2xlLmlkIj4KICAgICAgICAgICAgICB7eyBlY29sZS5ub20gfX0KICAgICAgICAgICAgPC9vcHRpb24+PC9zZWxlY3QKICAgICAgICAgID48YnIgLz4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IHYtZm9yPSJhcnRpY2xlIGluIGFydGljbGVzLmRhdGEiIDprZXk9ImFydGljbGUuaWQiPgogICAgICAgICAgPGRpdj57eyBhcnRpY2xlLnRpdHJlIH19PC9kaXY+CiAgICAgICAgICA8YnIgLz4KICAgICAgICAgIDxkaXY+e3sgYXJ0aWNsZS5kZXNjcmlwdGlvbiB9fTwvZGl2PgogICAgICAgICAgPGJyIC8+CiAgICAgICAgICA8ZGl2PgogICAgICAgICAgICA8aW1nIDpzcmM9IidodHRwOi8vbG9jYWxob3N0OjgwODAvJyArIGFydGljbGUuaW1hZ2UiIHdpZHRoPSIyNTAiIC8+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxiciAvPgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogIDwvZGl2Pgo="},{"version":3,"sources":["/home/andrea/Documents/MyEpitechDestination/Frontend/Frontend/myepitechdestination-front/src/components/SearchBar.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,CAAC;IACF,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACzC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC,CAAC,CAAC;UACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1B,CAAC;QACD,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UAC9C,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;UAClB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;UACxB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QACpE,CAAC,CAAC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UACpD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9D,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;UAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC,CAAC,CA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","file":"/home/andrea/Documents/MyEpitechDestination/Frontend/Frontend/myepitechdestination-front/src/components/SearchBar.vue","sourceRoot":"","sourcesContent":["<template>\n  <div>\n    <div id=\"autocomplete\" class=\"autocomplete\">\n      <div class=\"autocomplete\" style=\"\">\n        <input\n          type=\"text\"\n          name=\"\"\n          placeholder=\"Explore\"\n          v-model=\"query\"\n          @keyup=\"searchBar(query)\"\n        />\n        <div v-for=\"article in data.data\" :key=\"article\">\n          {{ article.titre }}\n          {{ article.description }}\n          <img :src=\"'http://localhost:8080/' + article.image\" width=\"250\" />\n        </div>\n        <select v-model=\"continent\" @change=\"getByContinent()\">\n          <option v-for=\"continent in continents.data\" :key=\"continent.id\">\n            {{ continent.continent }}\n          </option></select\n        ><br />\n        <div v-for=\"country in countries.data\" :key=\"country.id\">\n          <select v-model=\"pays\" @change=\"getByPays()\">\n            <option v-for=\"pays in country.etats\" :key=\"pays.id\">\n              {{ pays.pays }}\n            </option></select\n          ><br />\n        </div>\n        <div>\n          <select v-model=\"ville\" @change=\"getByVille()\">\n            <option v-for=\"ville in ville.data\" :key=\"ville.id\">\n              {{ ville.nom }}\n            </option></select\n          ><br />\n        </div>\n        <div>\n          <select v-model=\"universite\" @change=\"getByUniversite()\">\n            <option v-for=\"ecole in universite.data\" :key=\"ecole.id\">\n              {{ ecole.nom }}\n            </option></select\n          ><br />\n        </div>\n        <div v-for=\"article in articles.data\" :key=\"article.id\">\n          <div>{{ article.titre }}</div>\n          <br />\n          <div>{{ article.description }}</div>\n          <br />\n          <div>\n            <img :src=\"'http://localhost:8080/' + article.image\" width=\"250\" />\n          </div>\n          <br />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n\n<script>\nimport axios from \"axios\";\nimport UserService from \"../services/user.service\";\nexport default {\n  name: \"SearchBar\",\n  data() {\n    return {\n      content: \"\",\n      data: [],\n      continents: [],\n      countries: [],\n      ville: [],\n      universite: [],\n      articles: [],\n    };\n  },\n  mounted() {\n    UserService.getPublicContent().then(\n      (response) => {\n        this.content = response.data;\n      },\n      (error) => {\n        this.content =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.toString();\n      }\n    );\n  },\n  created() {\n    this.getByUniversite();\n    this.getAllcontinent();\n    this.getByVille();\n    this.getByPays();\n    this.getByContinent();\n    this.searchBar();\n  },\n  methods: {\n    getByUniversite() {\n      //requete d'une universite pour recupere les article associer\n      axios\n        .get(\n          \"http://localhost:8080/api/filteruniversite?universite=\" +\n            this.universite\n        )\n        .then((resp) => {\n          this.articles = resp;\n        });\n    },\n    getAllcontinent() {\n      //requete de tout les continent\n      axios.get(\"http://localhost:8080/api/filter/continent\").then((resp) => {\n        this.continents = resp;\n      });\n    },\n    getByVille() {\n      //requete par une ville pour récuperer une université\n      axios\n        .get(\"http://localhost:8080/api/filterville?ville=\" + this.ville)\n        .then((resp) => {\n          this.universite = resp;\n        });\n    },\n    getByPays() {\n      //requete par un pays pour recuperer une ville\n      axios\n        .get(\"http://localhost:8080/api/filterpays?pays=\" + this.pays)\n        .then((resp) => {\n          this.ville = resp;\n        });\n    },\n    getByContinent() {\n      axios\n        .get(\n          \"http://localhost:8080/api/filtercontinent?continent=\" +\n            this.continent\n        )\n        .then((resp) => {\n          this.countries = resp;\n          console.log(this.countries);\n        });\n    },\n    searchBar(query) {\n      axios\n        .get(\"http://localhost:8080/api/search?recherche=\" + query)\n        .then((resp) => {\n          this.data = resp;\n          console.log(this.data.data);\n        });\n    },\n    onChange: function () {\n      console.log(this.continent);\n    },\n  },\n};\n</script>\n\n<style scoped>\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-family: \"Lato\";\n}\n.autocomplete {\n  /*the container must be positioned relative:*/\n  position: relative;\n  display: inline-block;\n  width: 1000px;\n}\ninput {\n  border: 1px solid black;\n  background-color: #f1f1f1;\n  padding: 10px;\n  font-size: 16px;\n  border-radius: 50px;\n}\ninput[type=\"text\"] {\n  background-color: #f1f1f1;\n  width: 100%;\n}\n\n.autocomplete-items {\n  position: absolute;\n  border: 1px solid black;\n  border-top: none;\n  z-index: 99;\n  /*position the autocomplete items to be the same width as the container:*/\n  top: 100%;\n  left: 0;\n  right: 0;\n}\n.autocomplete-items div {\n  padding: 10px;\n  cursor: pointer;\n  background-color: black;\n}\n.autocomplete-items div:hover {\n  /*when hovering an item:*/\n  background-color: #e9e9e9;\n}\n.searchButton {\n  width: 40px;\n  height: 36px;\n  border: 1px solid #00b4cc;\n  background: #00b4cc;\n  text-align: center;\n  color: #fff;\n  border-radius: 0 5px 5px 0;\n  cursor: pointer;\n  font-size: 20px;\n}\n</style>\n\n"]}]}