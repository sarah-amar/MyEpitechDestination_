{"remainingRequest":"/home/andrea/Documents/MyEpitechDestination/Frontend/Frontend/myepitechdestination-front/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/andrea/Documents/MyEpitechDestination/Frontend/Frontend/myepitechdestination-front/src/components/SearchBar.vue?vue&type=style&index=0&id=0eca37cb&scoped=true&lang=css","dependencies":[{"path":"/home/andrea/Documents/MyEpitechDestination/Frontend/Frontend/myepitechdestination-front/src/components/SearchBar.vue","mtime":1622640493054},{"path":"/home/andrea/Documents/MyEpitechDestination/Frontend/Frontend/myepitechdestination-front/node_modules/css-loader/dist/cjs.js","mtime":1622583905050},{"path":"/home/andrea/Documents/MyEpitechDestination/Frontend/Frontend/myepitechdestination-front/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1622584282722},{"path":"/home/andrea/Documents/MyEpitechDestination/Frontend/Frontend/myepitechdestination-front/node_modules/postcss-loader/src/index.js","mtime":1622584117038},{"path":"/home/andrea/Documents/MyEpitechDestination/Frontend/Frontend/myepitechdestination-front/node_modules/cache-loader/dist/cjs.js","mtime":1622583802845},{"path":"/home/andrea/Documents/MyEpitechDestination/Frontend/Frontend/myepitechdestination-front/node_modules/vue-loader-v16/dist/index.js","mtime":1622584282457}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiogewogIGJveC1zaXppbmc6IGJvcmRlci1ib3g7Cn0KYm9keSB7CiAgZm9udC1mYW1pbHk6ICJMYXRvIjsKfQppbnB1dCB7CiAgYm9yZGVyOiAycHggc29saWQgIzg1YzRhZjsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjFmMWYxOwogIHBhZGRpbmc6IDEwcHg7CiAgZm9udC1zaXplOiAxNnB4OwogIGJvcmRlci1yYWRpdXM6IDUwcHg7CiAgcG9zaXRpb246IGNlbnRlcjsKfQppbnB1dFt0eXBlPSJ0ZXh0Il0gewogIGJhY2tncm91bmQtY29sb3I6ICNmMWYxZjE7CiAgYmFja2dyb3VuZC1wb3NpdGlvbjogOTklIDEwMCU7CiAgYmFja2dyb3VuZC1jb2xvcjogI2YxZjFmMTsKICBwYWRkaW5nOiAxMnB4OwogIGZvbnQtc2l6ZTogMTZweDsKICBib3JkZXItcmFkaXVzOiA1MHB4OwogIHdpZHRoOiA3MDBweDsKICB0ZXh0LWFsaWduOiBsZWZ0Owp9Cg=="},{"version":3,"sources":["/home/andrea/Documents/MyEpitechDestination/Frontend/Frontend/myepitechdestination-front/src/components/SearchBar.vue"],"names":[],"mappings":";AAoIA,EAAE;EACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB;AACA,CAAC,CAAC,CAAC,EAAE;EACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB;AACA,CAAC,CAAC,CAAC,CAAC,EAAE;EACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACnB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAClB","file":"/home/andrea/Documents/MyEpitechDestination/Frontend/Frontend/myepitechdestination-front/src/components/SearchBar.vue","sourceRoot":"","sourcesContent":["<template>\n  <div>\n    <div class=\"container searchbar\">\n      <div class=\"row\">\n        <div class=\"nav justify-content-center\">\n          <input\n            type=\"text\"\n            name=\"\"\n            placeholder=\"Explore\"\n            v-model=\"query\"\n            @keyup=\"searchBar(query)\"\n          />\n          <div v-for=\"article in data.data\" :key=\"article\">\n            {{ article.titre }}\n            {{ article.description }}\n            <img :src=\"'http://localhost:8080/' + article.image\" width=\"250\" />\n          </div>\n          <div v-for=\"article in articles.data\" :key=\"article.id\">\n            <div>{{ article.titre }}</div>\n            <br />\n            <div>{{ article.description }}</div>\n            <br />\n            <div>\n              <img\n                :src=\"'http://localhost:8080/' + article.image\"\n                width=\"250\"\n              />\n            </div>\n            <br />\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n\n<script>\nimport axios from \"axios\";\nimport UserService from \"../services/user.service\";\nexport default {\n  name: \"SearchBar\",\n  data() {\n    return {\n      content: \"\",\n      data: [],\n      continents: [],\n      countries: [],\n      ville: [],\n      universite: [],\n      articles: [],\n    };\n  },\n  mounted() {\n    UserService.getPublicContent().then(\n      (response) => {\n        this.content = response.data;\n      },\n      (error) => {\n        this.content =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.toString();\n      }\n    );\n  },\n  created() {\n    this.searchBar();\n  },\n  methods: {\n    getByUniversite() {\n      //requete d'une universite pour recupere les article associer\n      axios\n        .get(\n          \"http://localhost:8080/api/filteruniversite?universite=\" +\n            this.universite\n        )\n        .then((resp) => {\n          this.articles = resp;\n        });\n    },\n    getAllcontinent() {\n      //requete de tout les continent\n      axios.get(\"http://localhost:8080/api/filter/continent\").then((resp) => {\n        this.continents = resp;\n      });\n    },\n    getByVille() {\n      //requete par une ville pour récuperer une université\n      axios\n        .get(\"http://localhost:8080/api/filterville?ville=\" + this.ville)\n        .then((resp) => {\n          this.universite = resp;\n        });\n    },\n    getByPays() {\n      //requete par un pays pour recuperer une ville\n      axios\n        .get(\"http://localhost:8080/api/filterpays?pays=\" + this.pays)\n        .then((resp) => {\n          this.ville = resp;\n        });\n    },\n    getByContinent() {\n      axios\n        .get(\n          \"http://localhost:8080/api/filtercontinent?continent=\" +\n            this.continent\n        )\n        .then((resp) => {\n          this.countries = resp;\n          console.log(this.countries);\n        });\n    },\n    searchBar(query) {\n      axios\n        .get(\"http://localhost:8080/api/search?recherche=\" + query)\n        .then((resp) => {\n          this.data = resp;\n          console.log(this.data.data);\n        });\n    },\n    onChange: function () {\n      console.log(this.continent);\n    },\n  },\n};\n</script>\n\n<style scoped>\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-family: \"Lato\";\n}\ninput {\n  border: 2px solid #85c4af;\n  background-color: #f1f1f1;\n  padding: 10px;\n  font-size: 16px;\n  border-radius: 50px;\n  position: center;\n}\ninput[type=\"text\"] {\n  background-color: #f1f1f1;\n  background-position: 99% 100%;\n  background-color: #f1f1f1;\n  padding: 12px;\n  font-size: 16px;\n  border-radius: 50px;\n  width: 700px;\n  text-align: left;\n}\n</style>\n"]}]}